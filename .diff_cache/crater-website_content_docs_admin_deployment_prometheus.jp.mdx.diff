diff --git crater-website/content/docs/admin/deployment/prometheus.jp.mdx crater-website/content/docs/admin/deployment/prometheus.jp.mdx
index 78018c5..810698e 100644
--- crater-website/content/docs/admin/deployment/prometheus.jp.mdx
+++ crater-website/content/docs/admin/deployment/prometheus.jp.mdx
@@ -5,12 +5,12 @@ description: kube-prometheus-stack は、Rook Ceph RBD ストレージバック
 
 ## 概要
 
-Crater は **kube-prometheus-stack** を使って、拡張性のある堅牢な監視ソリューションを提供します。以下についてリアルタイムおよび歴史的な可観測性を提供します:
+Crater は **kube-prometheus-stack** を使って、拡張性のある堅牢な監視ソリューションを提供します。以下についてリアルタイムおよび歴史的な可観測性を提供します：
 
 - クラスター リソース使用状況 (CPU、メモリ、GPU、ストレージ)
 - ジョブライフサイクルメトリクス
 - システムレベルのパフォーマンス指標
-- GPUの状態および利用率 (DCGM経由)
+- GPU の状態および利用率 (DCGM 経由)
 - アプリケーション固有のカスタムメトリクス
 
 ### 核心コンポーネント
@@ -18,10 +18,10 @@ Crater は **kube-prometheus-stack** を使って、拡張性のある堅牢な
 - **Prometheus**: メトリクスの収集およびアラートのための時系列データベース
 - **Grafana**: ダッシュボード可視化およびユーザー向けメトリクスパネル
 - **Alertmanager**: オプションのアラートルーティングシステム (デフォルトで無効)
-- **DCGM Exporter**: `gpu-operator` からGPUメトリクスをPrometheusにエクスポート
+- **DCGM Exporter**: `gpu-operator` から GPU メトリクスを Prometheus にエクスポート
 - **metrics-server**: Kubernetes リソースメトリクス (CPU、メモリ) を提供
 
-Crater は **フロントエンドにGrafanaダッシュボードを直接統合**しており、プラットフォームUIを離れる必要なく、多様な洞察を提供します。
+Crater は **フロントエンドに Grafana ダッシュボードを直接統合**しており、プラットフォーム UI を離れる必要なく、多様な洞察を提供します。
 
 ---
 
@@ -29,7 +29,7 @@ Crater は **フロントエンドにGrafanaダッシュボードを直接統合
 
 Prometheus の永続ストレージバックエンドとして **Rook Ceph RBD** を使用しています。
 
-これにより以下のことが保証されます:
+これにより以下のことが保証されます：
 
 - 歴史的なメトリクスの高可用性および耐久性
 - 大規模な時系列データのインジェストに適したブロックレベルのパフォーマンス
@@ -40,27 +40,27 @@ Prometheus の永続ストレージバックエンドとして **Rook Ceph RBD**
 
 ## 依存関係
 
-Craterの監視を完全に有効にするには、以下のコンポーネントを**まずインストールしてください**:
+Crater の監視を完全に有効にするには、以下のコンポーネントを**まずインストールしてください**:
 
 | 依存関係          | 目的                                           | 参照                                                                 |
 |-------------------|------------------------------------------------|---------------------------------------------------------------------|
 | `rook-ceph-rbd`   | 永続ストレージバックエンド                       | [docs/rook-ceph.md](./rook-ceph.md)                                 |
 | `gpu-operator`    | DCGM Exporter (NVIDIA GPU メトリクス)           | [docs/gpu-operator.md](./gpu-operator.md)                           |
-| `metrics-server`  | 基本的なCPU/メモリリソースメトリクス            | [docs/metrics-server.md](./metrics-server.md)                       |
+| `metrics-server`  | 基本的な CPU/メモリリソースメトリクス            | [docs/metrics-server.md](./metrics-server.md)                       |
 
 ---
 
-## Craterのカスタマイズ
+## Crater のカスタマイズ
 
-以下について、変更された `values.yaml` およびサブチャート設定を提供しています:
+以下について、変更された `values.yaml` およびサブチャート設定を提供しています：
 
-- DCGMメトリクスのスクレイピングを有効化
-- Craterワークロードに関連するGrafanaダッシュボードの事前読み込み
-- Grafanaサービスタイプを `ClusterIP` に設定し、Crater管理のIngressを使用
-- Prometheusを長時間保持ウィンドウとカスタムストレージクラスで構成
+- DCGM メトリクスのスクレイピングを有効化
+- Crater ワークロードに関連する Grafana ダッシュボードの事前読み込み
+- Grafana サービスタイプを `ClusterIP` に設定し、Crater 管理の Ingress を使用
+- Prometheus を長時間保持ウィンドウとカスタムストレージクラスで構成
 - イメージリポジトリおよびリポジトリパスの調整
 
-これらの設定をクラスターセットアップに合わせて確認・編集してください、以下を含む:
+これらの設定をクラスターセットアップに合わせて確認・編集してください、以下を含む：
 
 - 🔁 **StorageClass**: `rook-ceph-rbd` に設定してください
 - 📦 **Image Repositories**: 必要に応じてローカル/プライベートリポジトリに合わせて設定してください
@@ -69,6 +69,6 @@ Craterの監視を完全に有効にするには、以下のコンポーネン
 
 ## インストール
 
-Craterの事前に設定された値を使用した公式のHelmチャートの使用を推奨します。
+Crater の事前に設定された値を使用した公式の Helm チャートの使用を推奨します。
 
-📖 詳細ガイド: [`deployments/prometheus-stack/README.md`](../deployments/prometheus-stack/README.md)
\ No newline at end of file
+📖 詳細ガイド：[`deployments/prometheus-stack/README.md`](../deployments/prometheus-stack/README.md)
\ No newline at end of file
