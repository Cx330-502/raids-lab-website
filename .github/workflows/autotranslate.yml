# ==============================================================================
#  Workflow: Smart Automatic i18n Translation (v5 - Final)
#
#  Features:
#  - Uses a dedicated GitHub App for secure authentication.
#  - Prevents self-triggering by checking the branch name.
#  - Other CI checks should be configured to trigger on `push` to `feature/auto-translate-**`
#    to ensure they run on this workflow's PRs.
# ==============================================================================

name: Smart Automatic i18n Translation

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - labeled

jobs:
  auto-translate:
    # --- 核心修改 ---
    # 增加一个条件：确保工作流不会在它自己创建的分支上运行。
    # `github.head_ref` 变量在 push 和 pull_request 事件中都有效，代表分支名。
    if: "!startsWith(github.head_ref, 'feature/auto-translate-')"

    runs-on: self-hosted
    steps:
      - name: 🔐 Generate a token
        id: generate-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: 🐍 Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: pip install requests

      - name: ⚙️ Determine Files & Generate Diffs
        id: files-to-process
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            BASE_REF="${{ github.event.before }}"
            HEAD_REF="${{ github.event.after }}"
          else # pull_request
            BASE_REF="origin/${{ github.base_ref }}"
            HEAD_REF="origin/${{ github.head_ref }}"
            git fetch origin ${{ github.base_ref }}:${{ github.base_ref }} --no-tags
          fi
          
          FILES_TO_PROCESS=$(git diff --name-only --diff-filter=AMR $BASE_REF...$HEAD_REF)

          if [[ -z "$FILES_TO_PROCESS" ]]; then
            echo "No new or modified files unique to this event were detected. Workflow will stop."
            echo "has_files=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "has_files=true" >> $GITHUB_OUTPUT
          echo "Files to process:"
          echo "$FILES_TO_PROCESS"
          
          mkdir -p .diff_cache

          MODIFIED_FILES=$(git diff --name-only --diff-filter=MR $BASE_REF...$HEAD_REF)
          for file in $MODIFIED_FILES; do
            diff_filename=$(echo "$file" | tr '/' '_')
            git diff --no-prefix $BASE_REF...$HEAD_REF -- "$file" > ".diff_cache/${diff_filename}.diff"
            echo "  - Created diff for $file"
          done

          FILES_TO_PROCESS_ARG=$(echo "$FILES_TO_PROCESS" | tr '\n' ',' | sed 's/,$//')
          echo "files=${FILES_TO_PROCESS_ARG}" >> $GITHUB_OUTPUT

      - name: 🚀 Run Translation Bootstrap Script
        if: steps.files-to-process.outputs.has_files == 'true'
        run: |
          python crater-website/hack/i18n/bootstrap.py --changed-files "${{ steps.files-to-process.outputs.files }}"

      - name: 🤖 Create Pull Request with Translations
        if: steps.files-to-process.outputs.has_files == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "chore(i18n): 自动同步多语言翻译"
          title: "🌐 [Auto-Translate] 同步多语言文件"
          body: |
            由 **${{ secrets.APP_NAME }}** 机器人根据最新变更自动同步翻译。
            
            **触发事件:** `${{ github.event_name }}`
            
            *此 PR 只包含本次事件中独有的变更，已智能排除合并主干所引入的 commits。*
          branch: "feature/auto-translate-${{ github.run_id }}"
          delete-branch: true
          labels: "i18n, automated"
          author: ${{ secrets.APP_NAME }}[bot] <${{ secrets.APP_ID }}+${{ secrets.APP_NAME }}[bot]@users.noreply.github.com>
          committer: ${{ secrets.APP_NAME }}[bot] <${{ secrets.APP_ID }}+${{ secrets.APP_NAME }}[bot]@users.noreply.github.com>