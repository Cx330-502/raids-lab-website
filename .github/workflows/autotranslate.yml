# ==============================================================================
#  Workflow: Smart Automatic i18n Translation (v4 - Production Ready)
#
#  Features:
#  - Uses a dedicated GitHub App for secure, isolated authentication.
#  - Prevents recursive workflow runs by checking the event sender.
#  - Employs a "three-dot diff" to precisely identify PR-specific changes.
# ==============================================================================

name: Smart Automatic i18n Translation

on:
  push:
    branches:
      - main
    paths:
      - 'crater-website/content/docs/**'
      - 'crater-website/messages/**'
      - 'crater-website/src/i18n/config.ts'
      - '.github/workflows/auto-translate.yml'

jobs:
  auto-translate:
    # 简化后的 if 条件，只防止由自己创建的 PR 合并时产生的二次触发
    if: >-
      !startsWith(github.event.head_commit.message, 'chore(i18n):') &&
      !contains(github.event.head_commit.message, 'from feature/auto-translate-')

    runs-on: self-hosted
    steps:
      # 步骤 1 & 2: 鉴权和检出代码 (不变)
      - name: 🔐 Generate a token
        id: generate-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 必须获取完整历史记录才能追溯 commit
          token: ${{ steps.generate-token.outputs.token }}

      # 步骤 3: 安装环境 (不变)
      - name: 🐍 Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: 📦 Install dependencies
        run: pip install requests

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      # 步骤 4 (全新): 智能过滤文件，追溯 PR 标签
      - name: ⚙️ Filter Files by Commit History and PR Labels
        id: files-to-process
        # 使用 GitHub CLI 进行 API 调用
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          BASE_REF="${{ github.event.before }}"
          HEAD_REF="${{ github.event.after }}"

          # 1. 获取所有新增和修改的文件
          ADDED_FILES=$(git diff --name-only --diff-filter=A --no-renames $BASE_REF...$HEAD_REF)
          MODIFIED_FILES=$(git diff --name-only --diff-filter=M --no-renames $BASE_REF...$HEAD_REF)

          echo "Found added files (will always be translated):"
          echo "${ADDED_FILES:-"None"}"

          echo "Found modified files (checking PR labels):"
          echo "${MODIFIED_FILES:-"None"}"
          
          FINAL_FILES_TO_PROCESS="$ADDED_FILES"
          
          # 2. 遍历已修改的文件，检查其来源 PR
          for file in $MODIFIED_FILES; do
            # 获取最后修改此文件的 commit hash
            COMMIT_HASH=$(git log -1 --pretty=format:%H -- $file)
            echo "  - File '$file' was last modified by commit $COMMIT_HASH"
            
            # 使用 gh cli 查找与此 commit 关联的 PR
            # --json number,labels 减少返回数据量
            PR_INFO=$(gh pr list --state merged --search "$COMMIT_HASH" --json number,labels -L 1)
            
            if [[ -z "$PR_INFO" || "$PR_INFO" == "[]" ]]; then
              echo "    - Could not find an associated merged PR for this commit. Assuming direct push. Translating."
              FINAL_FILES_TO_PROCESS=$(echo -e "$FINAL_FILES_TO_PROCESS\n$file")
              continue
            fi
            
            PR_NUMBER=$(echo "$PR_INFO" | jq -r '.[0].number')
            echo "    - Associated with PR #$PR_NUMBER"
            
            # 检查 PR 是否包含 'run-translation' 标签
            HAS_LABEL=$(echo "$PR_INFO" | jq '.[0].labels | map(.name) | contains(["run-translation"])')
            
            if [[ "$HAS_LABEL" == "true" ]]; then
              echo "    - PR #$PR_NUMBER has the 'run-translation' label. Adding file to process list."
              FINAL_FILES_TO_PROCESS=$(echo -e "$FINAL_FILES_TO_PROCESS\n$file")
            else
              echo "    - PR #$PR_NUMBER does NOT have the 'run-translation' label. Skipping."
            fi
          done

          # 3. 清理并输出最终文件列表
          # sed '/^$/d' 删除空行
          FINAL_FILES_TO_PROCESS=$(echo "$FINAL_FILES_TO_PROCESS" | sed '/^$/d' | sort -u)

          if [[ -z "$FINAL_FILES_TO_PROCESS" ]]; then
            echo "No files to process after filtering. Workflow will stop."
            echo "has_files=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has_files=true" >> $GITHUB_OUTPUT
          echo "Final list of files to process:"
          echo "$FINAL_FILES_TO_PROCESS"
          
          # Diff 生成逻辑 (与之前类似，但基于 FINAL_FILES_TO_PROCESS)
          mkdir -p .diff_cache
          for file in $FINAL_FILES_TO_PROCESS; do
            # 检查文件是否确实是 "modified" 状态来决定是否创建 diff
            if [[ $(git diff --name-only --diff-filter=M $BASE_REF...$HEAD_REF -- "$file") ]]; then
              diff_filename=$(echo "$file" | tr '/' '_')
              git diff --no-prefix $BASE_REF...$HEAD_REF -- "$file" > ".diff_cache/${diff_filename}.diff"
              echo "  - Created diff for modified file: $file"
            fi
          done

          FILES_TO_PROCESS_ARG=$(echo "$FINAL_FILES_TO_PROCESS" | tr '\n' ',' | sed 's/,$//')
          echo "files=${FILES_TO_PROCESS_ARG}" >> $GITHUB_OUTPUT

      # 步骤 5: 运行引导脚本 (增加 if 条件)
      - name: 🚀 Run Translation Bootstrap Script
        if: steps.files-to-process.outputs.has_files == 'true'
        run: |
          python crater-website/hack/i18n/bootstrap.py --changed-files "${{ steps.files-to-process.outputs.files }}"

      # 步骤 6: 创建 PR (增加 if 条件)
      - name: 🤖 Create Pull Request with Translations
        if: steps.files-to-process.outputs.has_files == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.generate-token.outputs.token }}
          # ... (其他参数不变) ...
          commit-message: "chore(i18n): 自动同步多语言翻译"
          title: "🌐 [Auto-Translate] 同步多语言文件"
          body: |
            由 **${{ secrets.APP_NAME }}** 机器人根据最新变更自动同步翻译。
            
            **触发事件:** `${{ github.event_name }}`
            
            *此 PR 只包含本次事件中独有的变更，已智能排除合并主干所引入的 commits。*
          branch: "feature/auto-translate-${{ github.run_id }}"
          delete-branch: true
          labels: "i18n, automated"
          author: ${{ secrets.APP_NAME }}[bot] <${{ secrets.APP_ID }}+${{ secrets.APP_NAME }}[bot]@users.noreply.github.com>
          committer: ${{ secrets.APP_NAME }}[bot] <${{ secrets.APP_ID }}+${{ secrets.APP_NAME }}[bot]@users.noreply.github.com>